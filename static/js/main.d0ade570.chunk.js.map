{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","filter","movie","index","self","findIndex","item","imdbId","map","key","BASE_URL","FindMovie","handleAdd","useState","setTitle","setMovie","errorTitle","setErrorTitle","errorMovie","setErrorMovie","a","fetch","response","json","result","Response","newMovie","Title","imdbID","Plot","Poster","htmlFor","type","id","value","onChange","event","target","placeholder","onClick","Object","keys","length","App","data","setMovies","current","concat","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0ade570.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.filter((movie, index, self) => (\n      index === self.findIndex(item => (\n        item.imdbId === movie.imdbId\n      )))).map(movie => (\n        <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\nconst BASE_URL = 'http://www.omdbapi.com/?apikey=de242cb8&t=';\n\nexport const FindMovie = ({ handleAdd }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState({});\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorMovie, setErrorMovie] = useState(false);\n\n  function handleChange(event) {\n    const { value } = event.target;\n\n    setErrorTitle(false);\n    setErrorMovie(false);\n    setMovie({});\n    setTitle(value);\n  }\n\n  async function findMovie() {\n    const response = await fetch(`${BASE_URL}${title}`);\n\n    const result = await response.json();\n\n    if (result.Response === 'False') {\n      setErrorTitle(true);\n\n      return;\n    }\n\n    const newMovie = [result].map(key => ({\n      title: key.Title,\n      imdbId: key.imdbID,\n      description: key.Plot,\n      imgUrl: key.Poster,\n      imdbUrl: `https://www.imdb.com/title/${key.imdbID}`,\n\n    }));\n\n    setMovie(newMovie);\n  }\n\n  function addMovie() {\n    if (movie && Object.keys(movie).length === 0) {\n      setErrorMovie(true);\n\n      return;\n    }\n\n    handleAdd(movie);\n    setTitle('');\n  }\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={title}\n              onChange={handleChange}\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n            />\n          </div>\n          {errorTitle && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n          )}\n          {errorMovie && (\n          <p className=\"help is-danger\">\n            Can&apos;t add undefined movie\n          </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              onClick={findMovie}\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              onClick={addMovie}\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie.length > 0\n          && <MovieCard {...movie[0]} />\n        }\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  handleAdd: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  function addMovie(item) {\n    setMovies(current => current.concat(item));\n  }\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          handleAdd={(item) => {\n            addMovie(item);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}