{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","filter","movie","index","self","findIndex","item","imdbId","map","key","FindMovie","handleAdd","useState","errorTitle","errorMovie","movieData","setMovieData","handleChange","useCallback","event","value","target","findMovie","a","fetch","response","json","result","Response","newMovie","Title","imdbID","Plot","Poster","addMovie","Object","keys","length","titel","htmlFor","type","id","onChange","placeholder","onClick","App","data","setMovies","currentMovies","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d91a578a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.filter((movie, index, self) => (\n      index === self.findIndex(item => (item.imdbId === movie.imdbId))))\n      .map(movie => (\n        <MovieCard key={movie.imdbId} {...movie} />\n      ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\nconst BASE_URL = 'https://www.omdbapi.com/?apikey=de242cb8&t=';\n\nexport const FindMovie = ({ handleAdd }) => {\n  const [movieData, setMovieData] = useState({\n    movie: {},\n    title: '',\n    errorTitle: false,\n    errorMovie: false,\n  });\n\n  const handleChange = useCallback(\n    (event) => {\n      const { value } = event.target;\n\n      setMovieData({\n        movie: {},\n        title: value,\n        errorTitle: false,\n        errorMovie: false,\n      });\n    },\n    [],\n  );\n  /*   const errorCatcher = useCallback(\n    async() => {\n      try {\n        const response = await fetch(`${BASE_URL}${title}`);\n\n        const result = await response.json();\n\n        return result;\n      } catch (error) {\n        setErrorTitle(true);\n\n        throw new Error();\n      }\n    },\n    [],\n  ); */\n  /* IDK how to do with TRY CATCH (Q&A --->) */\n  /*   const errorCatcher = async() => {\n    try {\n      const response = await fetch(`${BASE_URL}${movieData.title}`);\n\n      const result = await response.json();\n\n      return result;\n    } catch {\n      setMovieData({\n        ...movieData,\n        errorTitle: true,\n      });\n      // eslint-disable-next-line no-console\n      throw new Error();\n    }\n  }; */\n\n  const findMovie = useCallback(\n    async() => {\n      const response = await fetch(`${BASE_URL}${movieData.title}`);\n      const result = await response.json();\n\n      if (result.Response === 'False') {\n        setMovieData({\n          ...movieData,\n          errorTitle: true,\n        });\n\n        return;\n      }\n\n      const newMovie = [result].map(key => ({\n        title: key.Title,\n        imdbId: key.imdbID,\n        description: key.Plot,\n        imgUrl: key.Poster,\n        imdbUrl: `https://www.imdb.com/title/${key.imdbID}`,\n      }));\n\n      setMovieData({\n        ...movieData,\n        movie: newMovie,\n      });\n    }, [movieData],\n  );\n\n  const addMovie = useCallback(\n    () => {\n      if (movieData.movie && Object.keys(movieData.movie).length === 0) {\n        setMovieData({\n          ...movieData,\n          errorMovie: true,\n        });\n\n        return;\n      }\n\n      handleAdd(movieData.movie);\n      setMovieData({\n        ...movieData,\n        titel: '',\n        errorMovie: false,\n        errorTitle: false,\n      });\n    }, [movieData, handleAdd],\n  );\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={movieData.title}\n              onChange={handleChange}\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n            />\n          </div>\n          {movieData.errorTitle && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n          )}\n          {movieData.errorMovie && (\n          <p className=\"help is-danger\">\n            Can&apos;t add undefined movie\n          </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              onClick={findMovie}\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              onClick={addMovie}\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movieData.movie.length > 0\n          && <MovieCard {...movieData.movie[0]} />\n        }\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  handleAdd: PropTypes.func.isRequired,\n};\n","import React, { useState, useCallback } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = useCallback(\n    (newMovie) => {\n      setMovies(currentMovies => currentMovies.concat(newMovie));\n    }, [],\n  );\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          handleAdd={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}