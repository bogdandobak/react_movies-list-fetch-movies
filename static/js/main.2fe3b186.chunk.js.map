{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","filter","movie","index","self","findIndex","item","imdbId","map","key","FindMovie","handleAdd","useState","setTitle","setMovie","errorTitle","setErrorTitle","errorMovie","setErrorMovie","handleChange","useCallback","event","value","target","findMovie","a","fetch","response","json","result","Response","newMovie","Title","imdbID","Plot","Poster","addMovie","Object","keys","length","htmlFor","type","id","onChange","placeholder","onClick","App","data","setMovies","currentMovies","concat","ReactDOM","render","document","getElementById"],"mappings":"uwEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,QAAO,SAACC,EAAOC,EAAOC,GAAf,OACbD,IAAUC,EAAKC,WAAU,SAAAC,GAAI,OAAKA,EAAKC,SAAWL,EAAMK,aACvDC,KAAI,SAAAN,GAAK,OACR,kBAAC,EAAD,eAAWO,IAAKP,EAAMK,QAAYL,S,uBCL7BQ,G,MAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EAChBC,mBAAS,IADO,mBACnCrB,EADmC,KAC5BsB,EAD4B,OAEhBD,mBAAS,IAFO,mBAEnCV,EAFmC,KAE5BY,EAF4B,OAGNF,oBAAS,GAHH,mBAGnCG,EAHmC,KAGvBC,EAHuB,OAINJ,oBAAS,GAJH,mBAInCK,EAJmC,KAIvBC,EAJuB,KAMpCC,EAAeC,uBACnB,SAACC,GAAW,IACFC,EAAUD,EAAME,OAAhBD,MAERN,GAAc,GACdE,GAAc,GACdJ,EAAS,IACTD,EAASS,KAEX,IAGIE,EAAYJ,sBAAW,sBAC3B,gCAAAK,EAAA,sEACyBC,MAAM,GAAD,OAtBjB,+CAsBiB,OAAenC,IAD7C,cACQoC,EADR,gBAGuBA,EAASC,OAHhC,UAK0B,WAFlBC,EAHR,QAKaC,SALb,uBAMId,GAAc,GANlB,0BAWQe,EAAW,CAACF,GAAQrB,KAAI,SAAAC,GAAG,MAAK,CACpClB,MAAOkB,EAAIuB,MACXzB,OAAQE,EAAIwB,OACZzC,YAAaiB,EAAIyB,KACjBzC,OAAQgB,EAAI0B,OACZzC,QAAQ,8BAAD,OAAgCe,EAAIwB,YAG7CnB,EAASiB,GAnBX,4CAqBA,CAACxC,IAGG6C,EAAWhB,uBACf,WACMlB,GAAuC,IAA9BmC,OAAOC,KAAKpC,GAAOqC,OAC9BrB,GAAc,IAKhBP,EAAUT,GACVW,EAAS,OAEX,CAACX,EAAOS,IAGV,OACE,oCACE,0BAAMhB,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQ6C,QAAQ,eAAjC,eAIA,yBAAK7C,UAAU,WACb,2BACE8C,KAAK,OACLC,GAAG,cACHpB,MAAO/B,EACPoD,SAAUxB,EACVyB,YAAY,0BACZjD,UAAU,qBAGboB,GACD,uBAAGpB,UAAU,kBAAb,wCAICsB,GACD,uBAAGtB,UAAU,kBAAb,8BAOF,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACE8C,KAAK,SACLI,QAASrB,EACT7B,UAAU,mBAHZ,iBASF,yBAAKA,UAAU,WACb,4BACE8C,KAAK,SACLI,QAAST,EACTzC,UAAU,qBAHZ,sBAWN,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SAAd,WACCO,EAAMqC,OAAS,GACX,kBAAC,EAAcrC,EAAM,Q,OCpHrB4C,EAAM,WAAO,IAAD,EACKlC,mBAASmC,GADd,mBAChB/C,EADgB,KACRgD,EADQ,KAGjBZ,EAAWhB,uBACf,SAACW,GACCiB,GAAU,SAAAC,GAAa,OAAIA,EAAcC,OAAOnB,QAElD,IAGF,OACE,yBAAKpC,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CACEgB,UAAW,SAACL,GACV8B,EAAS9B,SCnBrB6C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2fe3b186.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.filter((movie, index, self) => (\n      index === self.findIndex(item => (item.imdbId === movie.imdbId))))\n      .map(movie => (\n        <MovieCard key={movie.imdbId} {...movie} />\n      ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\nconst BASE_URL = 'https://www.omdbapi.com/?apikey=de242cb8&t=';\n\nexport const FindMovie = ({ handleAdd }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState({});\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorMovie, setErrorMovie] = useState(false);\n\n  const handleChange = useCallback(\n    (event) => {\n      const { value } = event.target;\n\n      setErrorTitle(false);\n      setErrorMovie(false);\n      setMovie({});\n      setTitle(value);\n    },\n    [],\n  );\n\n  const findMovie = useCallback(\n    async() => {\n      const response = await fetch(`${BASE_URL}${title}`);\n\n      const result = await response.json();\n\n      if (result.Response === 'False') {\n        setErrorTitle(true);\n\n        return;\n      }\n\n      const newMovie = [result].map(key => ({\n        title: key.Title,\n        imdbId: key.imdbID,\n        description: key.Plot,\n        imgUrl: key.Poster,\n        imdbUrl: `https://www.imdb.com/title/${key.imdbID}`,\n      }));\n\n      setMovie(newMovie);\n    },\n    [title],\n  );\n\n  const addMovie = useCallback(\n    () => {\n      if (movie && Object.keys(movie).length === 0) {\n        setErrorMovie(true);\n\n        return;\n      }\n\n      handleAdd(movie);\n      setTitle('');\n    },\n    [movie, handleAdd],\n  );\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={title}\n              onChange={handleChange}\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n            />\n          </div>\n          {errorTitle && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n          )}\n          {errorMovie && (\n          <p className=\"help is-danger\">\n            Can&apos;t add undefined movie\n          </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              onClick={findMovie}\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              onClick={addMovie}\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie.length > 0\n          && <MovieCard {...movie[0]} />\n        }\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  handleAdd: PropTypes.func.isRequired,\n};\n","import React, { useState, useCallback } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = useCallback(\n    (newMovie) => {\n      setMovies(currentMovies => currentMovies.concat(newMovie));\n    },\n    [],\n  );\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          handleAdd={(item) => {\n            addMovie(item);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}